@page "/document"
@page "/document/{id:int}"
@rendermode InteractiveServer

@using Microsoft.EntityFrameworkCore
@using BlazorApp1.Models
@inject IDbContextFactory<BlazorApp1.Data.TicketContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>@title</PageTitle>

<h3>@title</h3>

@if (document is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@document" FormName="editDocument" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />


                <!--Brand-->
                <div class="mb-3">
                    <label for="brand" class="form-label">Brand:</label>
                    <InputText id="brand" @bind-Value="document.Brand" class="form-control" />
                    <ValidationMessage For="() => document.Brand" />
                </div>

                <!-- Campus -->
                <div class="mb-3">
                    <label for="campus" class="form-label">Campus:</label>
                    <InputText id="campus" @bind-Value="document.Campus" class="form-control" />
                    <ValidationMessage For="() => document.Campus" />
                </div>

                <!-- User Name -->
                <div class="mb-3">
                    <label for="userName" class="form-label">User Name:</label>
                    <InputText id="userName" @bind-Value="document.UserName" class="form-control" />
                    <ValidationMessage For="() => document.UserName" />
                </div>

                <!-- User Email -->
                <div class="mb-3">
                    <label for="userEmail" class="form-label">User Email:</label>
                    <InputText id="userEmail" @bind-Value="document.UserEmail" class="form-control" />
                    <ValidationMessage For="() => document.UserEmail" />
                </div>

                <!-- User Contact Number -->
                <div class="mb-3">
                    <label for="userContactNumber" class="form-label">User Contact Number:</label>
                    <InputText id="userContactNumber" @bind-Value="document.UserContactNumber" class="form-control" />
                    <ValidationMessage For="() => document.UserContactNumber" />
                </div>

                <!-- Primary Contact -->
                <div class="mb-3">
                    <label for="primaryContact" class="form-label">Primary Contact:</label>
                    <InputCheckbox id="primaryContact" @bind-Value="document.PrimaryContact" />
                    <ValidationMessage For="() => document.PrimaryContact" />
                </div>

                <!-- Troubleshooter Name -->
                <div class="mb-3">
                    <label for="troubleshooterName" class="form-label">Troubleshooter Name:</label>
                    <InputText id="troubleshooterName" @bind-Value="document.TroubleshooterName" class="form-control" />
                    <ValidationMessage For="() => document.TroubleshooterName" />
                </div>

                <!-- Troubleshooter Email -->
                <div class="mb-3">
                    <label for="troubleshooterEmail" class="form-label">Troubleshooter Email:</label>
                    <InputText id="troubleshooterEmail" @bind-Value="document.TroubleshooterEmail" class="form-control" />
                    <ValidationMessage For="() => document.TroubleshooterEmail" />
                </div>

                <!-- Troubleshooter Contact Number -->
                <div class="mb-3">
                    <label for="troubleshooterContactNumber" class="form-label">Troubleshooter Contact Number:</label>
                    <InputText id="troubleshooterContactNumber" @bind-Value="document.TroubleshooterContactNumber" class="form-control" />
                    <ValidationMessage For="() => document.TroubleshooterContactNumber" />
                </div>

                <!-- Site Address -->
                <div class="mb-3">
                    <label for="siteAddress" class="form-label">Site Address:</label>
                    <InputText id="siteAddress" @bind-Value="document.SiteAddress" class="form-control" />
                    <ValidationMessage For="() => document.SiteAddress" />
                </div>

                <!-- Equipment Make -->
                <div class="mb-3">
                    <label for="equipmentMake" class="form-label">Equipment Make:</label>
                    <InputText id="equipmentMake" @bind-Value="document.EquipmentMake" class="form-control" />
                    <ValidationMessage For="() => document.EquipmentMake" />
                </div>

                <!-- Equipment Model -->
                <div class="mb-3">
                    <label for="equipmentModel" class="form-label">Equipment Model:</label>
                    <InputText id="equipmentModel" @bind-Value="document.EquipmentModel" class="form-control" />
                    <ValidationMessage For="() => document.EquipmentModel" />
                </div>

                <!-- Equipment Product Number -->
                <div class="mb-3">
                    <label for="equipmentProductNumber" class="form-label">Equipment Product Number:</label>
                    <InputText id="equipmentProductNumber" @bind-Value="document.EquipmentProductNumber" class="form-control" />
                    <ValidationMessage For="() => document.EquipmentProductNumber" />
                </div>

                <!-- Equipment Serial Number -->
                <div class="mb-3">
                    <label for="equipmentSerialNumber" class="form-label">Equipment Serial Number:</label>
                    <InputText id="equipmentSerialNumber" @bind-Value="document.EquipmentSerialNumber" class="form-control" />
                    <ValidationMessage For="() => document.EquipmentSerialNumber" />
                </div>

                <!-- Fault Description -->
                <div class="mb-3">
                    <label for="faultDescription" class="form-label">Fault Description:</label>
                    <InputText id="faultDescription" @bind-Value="document.FaultDescription" class="form-control" />
                    <ValidationMessage For="() => document.FaultDescription" />
                </div>

                <!-- Edit + Delete -->
                <button type="submit" class="btn btn-primary">
                    Save
                </button>
                <a role="button" href="/documentOverview" class="btn btn-secondary">Cancel</a>
                <div style="margin-bottom: 20%"></div>


            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private DocumentDetails? document { get; set; }

    private string title = string.Empty;



    protected override void OnParametersSet()
    {
        if (document is not null)
        {
            return;
        }

        if (Id is not null)
        {
            using var context = DbFactory.CreateDbContext();
            document = context.DocumentDetails.FirstOrDefault(d => d.Id == Id.Value);
            title = $"Edit Document: {document.Id}";
        }
        else
        {
            document = new DocumentDetails();
            title = "New Document";
        }
    }


    //ADD & UPDATE DOCUMENT
    private async Task HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(document);

        using var context = DbFactory.CreateDbContext();

        if (Id is null)
        {
            context.DocumentDetails.Add(document);
        }
        else
        {
            context.DocumentDetails.Update(document);
        }

        await context.SaveChangesAsync();

        NavigationManager.NavigateTo("/documentOverview");
    }
}
