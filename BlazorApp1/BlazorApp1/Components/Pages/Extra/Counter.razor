@page "/counter"
@rendermode InteractiveServer
@inject IJSRuntime js;
@attribute [Authorize(Roles = "Administrator, Technician, User")]






<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<p role="status">Current count: @currentCount</p>

<AuthorizeView Roles="Administrator">
	<Authorized>
		<br />
		<br />
		<button class="btn btn-outline-primary" @onclick="DisplayGreetingAlert">Admin Greeting</button>
	</Authorized>
</AuthorizeView>



@code {
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }


	private int currentCount = 0;

	[Parameter]
	public int IncrementAmount { get; set; } = 1;

	private void IncrementCount()
	{
		currentCount += IncrementAmount;
	}

	private async Task DisplayGreetingAlert()
	{
		var authenticationState = await authenticationStateTask;
		var message = $"Hello {authenticationState.User.Identity!.Name}";
		await js.InvokeVoidAsync("alert", message);

	}


}