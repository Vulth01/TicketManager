@page "/ticketOverview"
@inject IDbContextFactory<BlazorApp1.Data.TicketContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Administrator, User")]

<style>
    th {
        white-space: nowrap;
    }
</style>

<h1>Ticket Overview</h1>

@if (tickets is null)
{
    <p><em>Loading...</em></p>
}
else
{
    @* TABLE OVERVIEW *@
    <table class="table table-striped table-bordered table-hover mt-4">
        @* TABLE FIELD HEADERS *@
        <thead class="table-dark">
        @* COMMON *@
        <th>Guid</th>
        <th>Id</th>
        <th>Ticket Type</th>
        <th>Username</th>
        <th>User Contact No</th>
        <th>User Email</th>
        <th>Site Address</th>
        <th>Make</th>
        <th>Model</th>
        <th>Description</th>
        @* TEMPLATE 1 *@
        <th>Number</th>
        <th>Desktop Serial</th>
        @* TEMPLATE 2 *@
        <th>Email</th>
        <th>Laptop Serial</th>
        <th>Laptop Make</th>
        @* TEMPLATE 3 *@
        <th>Template3Field1</th>
        <th>Template3Field2</th>
        <th>Template3Field3</th>
        <th></th>
        </thead>

        @* DISPLAY ALL TICKETS IN TABLE *@
        <tbody>
            @foreach (var ticket in tickets)
            {
                <tr>
                    @* COMMON *@
                    <td style="background-color: #9999bb">@ticket.TicketGuid</td>
                    <td style="background-color: #bbbbdd">@ticket.Id</td>
                    <td style="background-color: #9999bb">@ticket.TicketType</td>
                    <td style="background-color: #bbbbdd">@ticket.Username</td>
                    <td style="background-color: #9999bb">@ticket.UserContactNo</td>
                    <td style="background-color: #bbbbdd">@ticket.UserEmail</td>
                    <td style="background-color: #9999bb">@ticket.SiteAddress</td>
                    <td style="background-color: #bbbbdd">@ticket.Make</td>
                    <td style="background-color: #9999bb">@ticket.Model</td>
                    <td style="background-color: #bbbbdd">@ticket.Description</td>
                    @* TEMPLATE 1 *@
                    <td style="background-color: #9999bb">@ticket.Number</td>
                    <td style="background-color: #bbbbdd">@ticket.DesktopSerial</td>
                    @* TEMPLATE 2 *@
                    <td style="background-color: #9999bb">@ticket.Email</td>
                    <td style="background-color: #bbbbdd">@ticket.LaptopSerial</td>
                    <td style="background-color: #9999bb">@ticket.LaptopMake</td>
                    @* "TEMPLATE 3 *@
                    <td style="background-color: #9999bb">@ticket.Template3Field1</td>
                    <td style="background-color: #bbbbdd">@ticket.Template3Field2</td>
                    <td style="background-color: #9999bb">@ticket.Template3Field3</td>

                    @* MODIFY TICKET *@
                    <td style="background-color: #bbbbdd">
                        <div class="d-flex">
                            @* EDIT *@
                            <a class="btn btn-secondary me-2" role="button" href="@TicketUrl(ticket.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            @* DELETE *@
                            <button class="btn btn-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="@GetDeleteModalId(ticket)">
                                <i class="bi bi-trash3"></i>
                            </button>
                        </div>
                        <DeleteTicket Ticket="@ConvertToSummary(ticket)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Ticket>? tickets;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        tickets = await context.Tickets.ToListAsync();
    }

    private static string TicketUrl(int id) => $"/ticket/{id}";
    private string GetDeleteModalId(Ticket ticket) => $"#{DeleteTicket.GetModalId(ConvertToSummary(ticket))}";

    private TicketSummary ConvertToSummary(Ticket ticket)
    {
        return new TicketSummary
            {
                Id = ticket.Id,
                TicketGuid = ticket.TicketGuid,
                TicketType = ticket.TicketType,
                Username = ticket.Username,
                UserEmail = ticket.UserEmail,
                UserContactNo = ticket.UserContactNo,
                SiteAddress = ticket.SiteAddress,
                Make = ticket.Make,
                Model = ticket.Model,
                Number = ticket.Number,
                DesktopSerial = ticket.DesktopSerial,
                Description = ticket.Description,
                Email = ticket.Email,
                LaptopSerial = ticket.LaptopSerial,
                LaptopMake = ticket.LaptopMake
            };
    }
}
