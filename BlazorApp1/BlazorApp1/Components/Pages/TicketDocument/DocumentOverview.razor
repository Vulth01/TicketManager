@page "/documentOverview"
@inject IDbContextFactory<BlazorApp1.Data.TicketContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Administrator, User")]






<style>
    th {
        white-space: nowrap;
    }
</style>

<h1>Overview</h1>


@if (documents is null)
{
    <p><em>Loading...</em></p>
}
else
{
    @* TicketContext TABLE OVERVIEW *@
    <table class="table table-striped table-bordered table-hover mt-4" >
        @* TABLE FIELD HEADERS *@
        <thead class="table-dark">
            <th>Guid</th>
            <th>Id</th>
            <th>Brand</th>
            <th>Campus</th>
            <th>User Name</th>
            <th>User Email</th>
            <th>User Contact Number</th>
            <th>Primary Contact</th>
            <th>Troubleshooter Name</th>
            <th>Troubleshooter Email</th>
            <th>Troubleshooter Contact Number</th>
            <th>Site Address</th>
            <th>Equipment Make</th>
            <th>Equipment Model</th>
            <th>Equipment Product Number</th>
            <th>Equipment Serial Number</th>
            <th>Fault Description</th>
            <th></th>
        </thead>

        @* DISPLAY ALL TICKETS IN TABLE *@
        <tbody>
            @foreach (var document in documents)
            {
                @* FIELDS *@
                <tr>
                    @* TICKET PROPERTIES *@
                    <td style="background-color: #9999bb">@document.guid</td>
                    <td style="background-color: #bbbbdd">@document.Id</td>
                    <td style="background-color: #9999bb">@document.Brand</td>
                    <td style="background-color: #bbbbdd">@document.Campus</td>
                    <td style="background-color: #9999bb">@document.UserName</td>
                    <td style="background-color: #bbbbdd">@document.UserEmail</td>
                    <td style="background-color: #9999bb">@document.UserContactNumber</td>
                    <td style="background-color: #bbbbdd">@document.PrimaryContact</td>
                    <td style="background-color: #9999bb">@document.TroubleshooterName</td>
                    <td style="background-color: #bbbbdd">@document.TroubleshooterEmail</td>
                    <td style="background-color: #9999bb">@document.TroubleshooterContactNumber</td>
                    <td style="background-color: #bbbbdd">@document.SiteAddress</td>
                    <td style="background-color: #9999bb">@document.EquipmentMake</td>
                    <td style="background-color: #bbbbdd">@document.EquipmentModel</td>
                    <td style="background-color: #9999bb">@document.EquipmentProductNumber</td>
                    <td style="background-color: #bbbbdd">@document.EquipmentSerialNumber</td>
                    <td style="background-color: #9999bb">@document.FaultDescription</td>
                        
                    @* TICKET MODIFICATION *@
                    <td style="background-color: #bbbbdd">
                        <div class="d-flex">

                            @* EDIT *@
                            <a class="btn btn-secondary me-2" role="button" href="@DocumentUrl(document.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>

                            @* DELETE *@
                            <button class="btn btn-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="@GetDeleteModalId(document)">
                                <i class="bi bi-trash3"></i>
                            </button>

                        </div>
                        <DeleteDocument Document="@ConvertToSummary(document)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<DocumentDetails>? documents;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        documents = await context.DocumentDetails.ToListAsync();
    }

    private static string DocumentUrl(int id) => $"/document/{id}";
    private string GetDeleteModalId(DocumentDetails document) => $"#{DeleteDocument.GetModalId(ConvertToSummary(document))}";

    private DocumentSummary ConvertToSummary(DocumentDetails document)
    {
        return new DocumentSummary
            {
                guid = document.guid,
                Id = document.Id,
                Brand = document.Brand,
                Campus = document.Campus,
                UserName = document.UserName,
                UserEmail = document.UserEmail,
                UserContactNumber = document.UserContactNumber,
                PrimaryContact = document.PrimaryContact,
                TroubleshooterName = document.TroubleshooterName,
                TroubleshooterEmail = document.TroubleshooterEmail,
                TroubleshooterContactNumber = document.TroubleshooterContactNumber,
                SiteAddress = document.SiteAddress,
                EquipmentMake = document.EquipmentMake,
                EquipmentModel = document.EquipmentModel,
                EquipmentProductNumber = document.EquipmentProductNumber,
                EquipmentSerialNumber = document.EquipmentSerialNumber,
                FaultDescription = document.FaultDescription
            };
    }


}
