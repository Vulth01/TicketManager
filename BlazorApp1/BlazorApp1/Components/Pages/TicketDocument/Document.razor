@page "/document"
@page "/document/{id:int}"

@attribute [Authorize(Roles = "Administrator, User")]

@rendermode InteractiveServer

@inject IDbContextFactory<BlazorApp1.Data.TicketContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>@_title</PageTitle>

<h3>@_title</h3>

@if (_document == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@_document" FormName="editDocument" OnValidSubmit="HandleSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
    @* Brand *@
            @* OLD *@
                @* <div class="mb-3"> *@
                @*     <label for="brand" class="form-label">Brand:</label> *@
                @*     <InputText id="brand" @bind-Value="_document.Brand" class="form-control" /> *@
                @*     <ValidationMessage For="() => _document.Brand" /> *@
                @* </div> *@
            @* NEW *@
                <div class="mb-3">
                    <label for="educationLevel" class="form-label">Education Level:</label>
                    <InputSelect id="educationLevel" @bind-Value="_document.Brand" class="form-control">
                        <option value="Preschool">Preschool</option>
                        <option value="Primary">Primary</option>
                        <option value="Secondary">Secondary</option>
                        <option value="Tertiary">Tertiary</option>
                        <option value="Vocational">Vocational</option>
                        <option value="Postgraduate">Postgraduate</option>
                    </InputSelect>
                </div>

    @*  Campus *@
                <div class="mb-3">
                    <label for="campus" class="form-label">Campus:</label>
                    <InputText id="campus" @bind-Value="_document.Campus" class="form-control" />
                    <ValidationMessage For="() => _document.Campus" />
                </div>

    @*  User Name *@
                <div class="mb-3">
                    <label for="userName" class="form-label">User Name:</label>
                    <InputText id="userName" @bind-Value="_document.UserName" class="form-control" />
                    <ValidationMessage For="() => _document.UserName" />
                </div>

    @*  User Email *@
                <div class="mb-3">
                    <label for="userEmail" class="form-label">User Email:</label>
                    <InputText id="userEmail" @bind-Value="_document.UserEmail" class="form-control" />
                    <ValidationMessage For="() => _document.UserEmail" />
                </div>

    @*  User Contact Number *@
                <div class="mb-3">
                    <label for="userContactNumber" class="form-label">User Contact Number:</label>
                    <InputText id="userContactNumber" @bind-Value="_document.UserContactNumber" class="form-control" />
                    <ValidationMessage For="() => _document.UserContactNumber" />
                </div>

    @*  Primary Contact *@
                <div class="mb-3">
                    <label for="primaryContact" class="form-label">Primary Contact:</label>
                    <InputCheckbox id="primaryContact" @bind-Value="_document.PrimaryContact" />
                    <ValidationMessage For="() => _document.PrimaryContact" />
                </div>

    @*  Troubleshooter Name *@
                <div class="mb-3">
                    <label for="troubleshooterName" class="form-label">Troubleshooter Name:</label>
                    <InputText id="troubleshooterName" @bind-Value="_document.TroubleshooterName" class="form-control" />
                    <ValidationMessage For="() => _document.TroubleshooterName" />
                </div>

    @*  Troubleshooter Email *@
                <div class="mb-3">
                    <label for="troubleshooterEmail" class="form-label">Troubleshooter Email:</label>
                    <InputText id="troubleshooterEmail" @bind-Value="_document.TroubleshooterEmail" class="form-control" />
                    <ValidationMessage For="() => _document.TroubleshooterEmail" />
                </div>

    @*  Troubleshooter Contact Number *@
                <div class="mb-3">
                    <label for="troubleshooterContactNumber" class="form-label">Troubleshooter Contact Number:</label>
                    <InputText id="troubleshooterContactNumber" @bind-Value="_document.TroubleshooterContactNumber" class="form-control" />
                    <ValidationMessage For="() => _document.TroubleshooterContactNumber" />
                </div>

    @* Site Address *@
                <div class="mb-3">
                    <label for="siteAddress" class="form-label">Site Address:</label>
                    <InputText id="siteAddress" @bind-Value="_document.SiteAddress" class="form-control" />
                    <ValidationMessage For="() => _document.SiteAddress" />
                </div>

    @* Equipment Make *@
                <div class="mb-3">
                    <label for="equipmentMake" class="form-label">Equipment Make:</label>
                    <InputText id="equipmentMake" @bind-Value="_document.EquipmentMake" class="form-control" />
                    <ValidationMessage For="() => _document.EquipmentMake" />
                </div>

     @* Equipment Model *@
                <div class="mb-3">
                    <label for="equipmentModel" class="form-label">Equipment Model:</label>
                    <InputText id="equipmentModel" @bind-Value="_document.EquipmentModel" class="form-control" />
                    <ValidationMessage For="() => _document.EquipmentModel" />
                </div>

    @* Equipment Product Number *@
                <div class="mb-3">
                    <label for="equipmentProductNumber" class="form-label">Equipment Product Number:</label>
                    <InputText id="equipmentProductNumber" @bind-Value="_document.EquipmentProductNumber" class="form-control" />
                    <ValidationMessage For="() => _document.EquipmentProductNumber" />
                </div>

    @* Equipment Serial Number *@
                <div class="mb-3">
                    <label for="equipmentSerialNumber" class="form-label">Equipment Serial Number:</label>
                    <InputText id="equipmentSerialNumber" @bind-Value="_document.EquipmentSerialNumber" class="form-control" />
                    <ValidationMessage For="() => _document.EquipmentSerialNumber" />
                </div>

    @* Fault Description *@
                <div class="mb-3">
                    <label for="faultDescription" class="form-label">Fault Description:</label>
                    <InputText id="faultDescription" @bind-Value="_document.FaultDescription" class="form-control" />
                    <ValidationMessage For="() => _document.FaultDescription" />
                </div>

    @* Submit + Delete *@
                <div class="button-group">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a role="button" href="/documentOverview" class="btn btn-secondary">Cancel</a>
                </div>
                <div class="mb-5"></div>

            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private DocumentDetails? _document { get; set; }

    private string _title = string.Empty;



    protected override void OnParametersSet()
    {
        if (_document is not null)
        {
            return;
        }


        if (Id is not null)
        {
            using var context = DbFactory.CreateDbContext();
            _document = context.DocumentDetails.FirstOrDefault(d => d.Id == Id.Value);
            _title = $"ADvTECH Group | Edit Document: {_document!.Id}";
        }
        else
        {
            _document = new DocumentDetails();
            _title = "ADvTECH Group | New Document";
        }
    }


    //ADD & UPDATE DOCUMENT
    private async Task HandleSubmitAsync()
    {
        ArgumentNullException.ThrowIfNull(_document);

        using var context = DbFactory.CreateDbContext();

        if (Id is null)
        {
            context.DocumentDetails.Add(_document);
        }
        else
        {
            context.DocumentDetails.Update(_document);
        }

        await context.SaveChangesAsync();

        NavigationManager.NavigateTo("/documentOverview");
    }
}
