
@page "/documentOverview"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Administrator, User")]

@inject IDbContextFactory<BlazorApp1.Data.TicketContext> DbFactory
@inject NavigationManager NavigationManager

@using BlazorApp1.Models
@using Microsoft.EntityFrameworkCore

<style>
    th {
        white-space: nowrap;
    }
</style>

<h1>Overview</h1>

@if (documents is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-4">
        <thead class="table-dark">
        <th>Guid</th>
        <th>Id</th>
        <td>Brand</td>
        <td>Campus</td>
        <td>UserName</td>
        <td>UserEmail</td>
        <td>UserContactNumber</td>
        <td>PrimaryContact</td>
        <td>TroubleshooterName</td>
        <td>TroubleshooterEmail</td>
        <td>TroubleshooterContactNumber</td>
        <td>SiteAddress</td>
        <td>EquipmentMake</td>
        <td>EquipmentModel</td>
        <td>EquipmentProductNumber</td>
        <td>EquipmentSerialNumber</td>
        <td>FaultDescription</td>
        <th></th>
        </thead>
        <tbody>
            @foreach (var document in documents)
            {
                <tr>
                    <td>@document.guid</td>
                    <td>@document.Id</td>
                    <td>@document.Brand</td>
                    <td>@document.Campus</td>
                    <td>@document.UserName</td>
                    <td>@document.UserEmail</td>
                    <td>@document.UserContactNumber</td>
                    <td>@document.PrimaryContact</td>
                    <td>@document.TroubleshooterName</td>
                    <td>@document.TroubleshooterEmail</td>
                    <td>@document.TroubleshooterContactNumber</td>
                    <td>@document.SiteAddress</td>
                    <td>@document.EquipmentMake</td>
                    <td>@document.EquipmentModel</td>
                    <td>@document.EquipmentProductNumber</td>
                    <td>@document.EquipmentSerialNumber</td>
                    <td>@document.FaultDescription</td>

                    <!-- EDIT + DELETE -->
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-secondary me-2" role="button" href="@DocumentUrl(document.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="@GetDeleteModalId(document)">
                                <i class="bi bi-trash3"></i>
                            </button>
                        </div>
                        <DeleteDocument Document="@ConvertToSummary(document)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<DocumentDetails>? documents;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        documents = await context.DocumentDetails.ToListAsync();
    }

    private static string DocumentUrl(int id) => $"/document/{id}";
    private string GetDeleteModalId(DocumentDetails document) => $"#{DeleteDocument.GetModalId(ConvertToSummary(document))}";

    private DocumentSummary ConvertToSummary(DocumentDetails document)
    {
        return new DocumentSummary
            {
                guid = document.guid,
                Id = document.Id,
                Brand = document.Brand,
                Campus = document.Campus,
                UserName = document.UserName,
                UserEmail = document.UserEmail,
                UserContactNumber = document.UserContactNumber,
                PrimaryContact = document.PrimaryContact,
                TroubleshooterName = document.TroubleshooterName,
                TroubleshooterEmail = document.TroubleshooterEmail,
                TroubleshooterContactNumber = document.TroubleshooterContactNumber,
                SiteAddress = document.SiteAddress,
                EquipmentMake = document.EquipmentMake,
                EquipmentModel = document.EquipmentModel,
                EquipmentProductNumber = document.EquipmentProductNumber,
                EquipmentSerialNumber = document.EquipmentSerialNumber,
                FaultDescription = document.FaultDescription
            };
    }


}
